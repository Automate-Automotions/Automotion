plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

fabricApi {
    configureDataGeneration()
}

repositories {
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }
    maven {
        name = "REI"
        url "https://maven.shedaniel.me"
    }
    maven {
        name = "EMI"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "JEI host <2023"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "JEI host >2023"
        url = "https://maven.blamejared.com/"
    }
    mavenCentral()
}

dependencies {
    // Minecraft and mappings
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // REI, EMI, JEI implementation
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modCompileOnly "mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}"
    modRuntimeOnly "mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}"
    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"
    modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"

    if (project.hasProperty('includeOptionalDeps') && project.includeOptionalDeps.toBoolean()) {
        modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
        modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
        modCompileOnly "mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}"
        modRuntimeOnly "mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}"
        modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"
        modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"
    }

    // Force fabric loader version and exclude fabric-item-groups-v0 | fabric-textures-v0 modules
    configurations.configureEach {
        resolutionStrategy {
            force "net.fabricmc:fabric-loader:${project.loader_version}"
        }
        exclude group: "net.fabricmc.fabric-api", module: "fabric-item-groups-v0"
        exclude group: "net.fabricmc.fabric-api", module: "fabric-textures-v0"
    }
}

configurations {
    optionalDeps
}

afterEvaluate {
    if (project.hasProperty('includeOptionalDeps') && project.includeOptionalDeps.toBoolean()) {
        configurations.optionalDeps.each { dep ->
            dependencies.add(dep)
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}